

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri May 20 19:49:30 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000E                     	;# 
    23  000E                     	;# 
    24  000F                     	;# 
    25  0010                     	;# 
    26  0011                     	;# 
    27  0012                     	;# 
    28  0013                     	;# 
    29  0014                     	;# 
    30  0015                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001E                     	;# 
    37  001F                     	;# 
    38  0081                     	;# 
    39  0085                     	;# 
    40  0087                     	;# 
    41  008C                     	;# 
    42  008E                     	;# 
    43  008F                     	;# 
    44  0090                     	;# 
    45  0091                     	;# 
    46  0095                     	;# 
    47  0095                     	;# 
    48  0096                     	;# 
    49  0096                     	;# 
    50  0097                     	;# 
    51  0098                     	;# 
    52  0099                     	;# 
    53  009A                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009C                     	;# 
    57  009D                     	;# 
    58  009E                     	;# 
    59  009F                     	;# 
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0007                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0095                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108                           
   109                           	psect	strings
   110  0002                     __pstrings:	
   111  0002                     stringtab:	
   112  0002                     __stringtab:	
   113  0002                     stringcode:	
   114                           ;	String table - string pointers are 1 byte each
   115                           
   116  0002                     stringdir:	
   117  0002  3000               	movlw	high stringdir
   118  0003  008A               	movwf	10
   119  0004  0804               	movf	4,w
   120  0005  0A84               	incf	4,f
   121  0006  0782               	addwf	2,f
   122  0007                     __stringbase:	
   123  0007  3400               	retlw	0
   124  0008                     __end_of__stringtab:	
   125  0008                     _dpowers:	
   126  0008  3401               	retlw	1
   127  0009  3400               	retlw	0
   128  000A  340A               	retlw	10
   129  000B  3400               	retlw	0
   130  000C  3464               	retlw	100
   131  000D  3400               	retlw	0
   132  000E  34E8               	retlw	232
   133  000F  3403               	retlw	3
   134  0010  3410               	retlw	16
   135  0011  3427               	retlw	39
   136  0012                     __end_of_dpowers:	
   137  001F                     _ADCON0bits	set	31
   138  001E                     _ADRESH	set	30
   139  0007                     _PORTCbits	set	7
   140  0017                     _RCSTAbits	set	23
   141  0013                     _SPBRG	set	19
   142  0015                     _TXREG	set	21
   143  0016                     _TXSTAbits	set	22
   144  009F                     _ADCON1bits	set	159
   145  009E                     _ADRESL	set	158
   146  0091                     _ANSELbits	set	145
   147  0087                     _TRISC	set	135
   148  0087                     _TRISCbits	set	135
   149  0012                     STR_1:	
   150  0012  3425               	retlw	37	;'%'
   151  0013  3464               	retlw	100	;'d'
   152  0014  340A               	retlw	10
   153  0015  3400               	retlw	0
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  07FB                     start_initialization:	
   159  07FB                     __initialization:	
   160                           
   161                           ; Clear objects allocated to COMMON
   162  07FB  01F5               	clrf	__pbssCOMMON& (0+127)
   163  07FC  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   164  07FD                     end_of_initialization:	
   165                           ;End of C runtime variable initialization code
   166                           
   167  07FD                     __end_of__initialization:	
   168  07FD  0183               	clrf	3
   169  07FE  118A  2FAA         	ljmp	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMMON
   172  0075                     __pbssCOMMON:	
   173  0075                     _lastInt:	
   174  0075                     	ds	2
   175                           
   176                           	psect	cstackCOMMON
   177  0070                     __pcstackCOMMON:	
   178  0070                     ?_ADC_init:	
   179  0070                     ??_ADC_init:	
   180                           ; 0 bytes @ 0x0
   181                           
   182  0070                     ?_ADC_read:	
   183                           ; 0 bytes @ 0x0
   184                           
   185  0070                     ?_main:	
   186                           ; 2 bytes @ 0x0
   187                           
   188  0070                     ADC_read@chan:	
   189                           ; 2 bytes @ 0x0
   190                           
   191                           
   192                           ; 2 bytes @ 0x0
   193  0070                     	ds	2
   194  0072                     ??_ADC_read:	
   195                           
   196                           ; 0 bytes @ 0x2
   197  0072                     	ds	1
   198  0073                     ??_main:	
   199  0073                     main@adcRes:	
   200                           ; 0 bytes @ 0x3
   201                           
   202                           
   203                           ; 2 bytes @ 0x3
   204  0073                     	ds	2
   205                           
   206                           	psect	maintext
   207  07AA                     __pmaintext:	
   208 ;;
   209 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   210 ;;
   211 ;; *************** function _main *****************
   212 ;; Defined at:
   213 ;;		line 49 in file "main.c"
   214 ;; Parameters:    Size  Location     Type
   215 ;;		None
   216 ;; Auto vars:     Size  Location     Type
   217 ;;  adcRes          2    3[COMMON] int 
   218 ;; Return value:  Size  Location     Type
   219 ;;                  2   30[None  ] int 
   220 ;; Registers used:
   221 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   222 ;; Tracked objects:
   223 ;;		On entry : B00/0
   224 ;;		On exit  : 0/0
   225 ;;		Unchanged: 0/0
   226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   227 ;;      Params:         0       0       0       0
   228 ;;      Locals:         2       0       0       0
   229 ;;      Temps:          0       0       0       0
   230 ;;      Totals:         2       0       0       0
   231 ;;Total ram usage:        2 bytes
   232 ;; Hardware stack levels required when called:    1
   233 ;; This function calls:
   234 ;;		_ADC_init
   235 ;;		_ADC_read
   236 ;; This function is called by:
   237 ;;		Startup code after reset
   238 ;; This function uses a non-reentrant model
   239 ;;
   240                           
   241                           
   242                           ;psect for function _main
   243  07AA                     _main:	
   244                           
   245                           ;main.c: 51: ADC_init();
   246                           
   247                           ;incstack = 0
   248                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   249  07AA  118A  279C  118A   	fcall	_ADC_init
   250                           
   251                           ;main.c: 52: TRISC = 0xFF;
   252  07AD  30FF               	movlw	255
   253  07AE  1683               	bsf	3,5	;RP0=1, select bank1
   254  07AF  1303               	bcf	3,6	;RP1=0, select bank1
   255  07B0  0087               	movwf	7	;volatile
   256                           
   257                           ;main.c: 53: TRISCbits.TRISC5 = 0;
   258  07B1  1287               	bcf	7,5	;volatile
   259                           
   260                           ;main.c: 54: TRISCbits.TRISC4 = 0;
   261  07B2  1207               	bcf	7,4	;volatile
   262  07B3  2FB7               	goto	l642
   263  07B4                     l644:	
   264                           
   265                           ;main.c: 63: PORTCbits.RC5 = 1;
   266  07B4  1283               	bcf	3,5	;RP0=0, select bank0
   267  07B5  1303               	bcf	3,6	;RP1=0, select bank0
   268  07B6  1687               	bsf	7,5	;volatile
   269  07B7                     l642:	
   270                           ;main.c: 56: int adcRes;
   271                           ;main.c: 58: while(1)
   272                           
   273                           
   274                           ;main.c: 59: {
   275                           ;main.c: 60: adcRes = ADC_read(4);
   276  07B7  3004               	movlw	4
   277  07B8  00F0               	movwf	ADC_read@chan
   278  07B9  3000               	movlw	0
   279  07BA  00F1               	movwf	ADC_read@chan+1
   280  07BB  118A  27D1  118A   	fcall	_ADC_read
   281  07BE  0871               	movf	?_ADC_read+1,w
   282  07BF  00F4               	movwf	main@adcRes+1
   283  07C0  0870               	movf	?_ADC_read,w
   284  07C1  00F3               	movwf	main@adcRes
   285                           
   286                           ;main.c: 62: if(adcRes > 512)
   287  07C2  0874               	movf	main@adcRes+1,w
   288  07C3  3A80               	xorlw	128
   289  07C4  00FF               	movwf	127
   290  07C5  3082               	movlw	130
   291  07C6  027F               	subwf	127,w
   292  07C7  1D03               	skipz
   293  07C8  2FCB               	goto	u85
   294  07C9  3001               	movlw	1
   295  07CA  0273               	subwf	main@adcRes,w
   296  07CB                     u85:	
   297  07CB  1803               	btfsc	3,0
   298  07CC  2FB4               	goto	l644
   299                           
   300                           ;main.c: 64: else
   301                           ;main.c: 65: PORTCbits.RC5 = 0;
   302  07CD  1283               	bcf	3,5	;RP0=0, select bank0
   303  07CE  1303               	bcf	3,6	;RP1=0, select bank0
   304  07CF  1287               	bcf	7,5	;volatile
   305  07D0  2FB7               	goto	l642
   306  07D1                     __end_of_main:	
   307                           ;main.c: 66: }
   308                           ;main.c: 68: return 0;
   309                           ;	Return value of _main is never used
   310                           
   311                           
   312                           	psect	text1
   313  07D1                     __ptext1:	
   314 ;; *************** function _ADC_read *****************
   315 ;; Defined at:
   316 ;;		line 31 in file "main.c"
   317 ;; Parameters:    Size  Location     Type
   318 ;;  chan            2    0[COMMON] int 
   319 ;; Auto vars:     Size  Location     Type
   320 ;;		None
   321 ;; Return value:  Size  Location     Type
   322 ;;                  2    0[COMMON] int 
   323 ;; Registers used:
   324 ;;		wreg, status,2, status,0, btemp+1
   325 ;; Tracked objects:
   326 ;;		On entry : 0/0
   327 ;;		On exit  : 0/0
   328 ;;		Unchanged: 0/0
   329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   330 ;;      Params:         2       0       0       0
   331 ;;      Locals:         0       0       0       0
   332 ;;      Temps:          1       0       0       0
   333 ;;      Totals:         3       0       0       0
   334 ;;Total ram usage:        3 bytes
   335 ;; Hardware stack levels used:    1
   336 ;; This function calls:
   337 ;;		Nothing
   338 ;; This function is called by:
   339 ;;		_main
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           
   343                           
   344                           ;psect for function _ADC_read
   345  07D1                     _ADC_read:	
   346                           
   347                           ;main.c: 32: if (chan > 7) {
   348                           
   349                           ;incstack = 0
   350                           ; Regs used in _ADC_read: [wreg+status,2+status,0+btemp+1]
   351  07D1  0871               	movf	ADC_read@chan+1,w
   352  07D2  3A80               	xorlw	128
   353  07D3  00FF               	movwf	127
   354  07D4  3080               	movlw	128
   355  07D5  027F               	subwf	127,w
   356  07D6  1D03               	skipz
   357  07D7  2FDA               	goto	u65
   358  07D8  3008               	movlw	8
   359  07D9  0270               	subwf	ADC_read@chan,w
   360  07DA                     u65:	
   361  07DA  1C03               	skipc
   362  07DB  2FDF               	goto	l24
   363                           
   364                           ;main.c: 33: return 0;
   365  07DC  01F0               	clrf	?_ADC_read
   366  07DD  01F1               	clrf	?_ADC_read+1
   367  07DE  0008               	return
   368  07DF                     l24:	
   369                           
   370                           ;main.c: 34: }
   371                           ;main.c: 36: ADCON0bits.ADON = 0;
   372  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   373  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   374  07E1  101F               	bcf	31,0	;volatile
   375                           
   376                           ;main.c: 37: ADCON0bits.CHS = chan;
   377  07E2  0870               	movf	ADC_read@chan,w
   378  07E3  00F2               	movwf	??_ADC_read
   379  07E4  0DF2               	rlf	??_ADC_read,f
   380  07E5  0DF2               	rlf	??_ADC_read,f
   381  07E6  081F               	movf	31,w	;volatile
   382  07E7  0672               	xorwf	??_ADC_read,w
   383  07E8  39E3               	andlw	-29
   384  07E9  0672               	xorwf	??_ADC_read,w
   385  07EA  009F               	movwf	31	;volatile
   386                           
   387                           ;main.c: 38: ADCON0bits.ADON = 1;
   388  07EB  141F               	bsf	31,0	;volatile
   389                           
   390                           ;main.c: 40: _delay((unsigned long)((5)*(4000000/4000000.0)));
   391  07EC  2FED               	nop2	;2 cycle nop
   392  07ED  2FEE               	nop2	;2 cycle nop
   393  07EE  0000               	nop
   394                           
   395                           ;main.c: 42: ADCON0bits.GO = 1;
   396  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   397  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   398  07F1  149F               	bsf	31,1	;volatile
   399  07F2                     l26:	
   400                           ;main.c: 44: while (ADCON0bits.GO == 1) {};
   401                           
   402  07F2  189F               	btfsc	31,1	;volatile
   403  07F3  2FF2               	goto	l26
   404                           
   405                           ;main.c: 46: return (ADRESH<<8)+ADRESL;
   406  07F4  081E               	movf	30,w	;volatile
   407  07F5  00F1               	movwf	?_ADC_read+1
   408  07F6  1683               	bsf	3,5	;RP0=1, select bank1
   409  07F7  1303               	bcf	3,6	;RP1=0, select bank1
   410  07F8  081E               	movf	30,w	;volatile
   411  07F9  00F0               	movwf	?_ADC_read
   412  07FA  0008               	return
   413  07FB                     __end_of_ADC_read:	
   414                           
   415                           	psect	text2
   416  079C                     __ptext2:	
   417 ;; *************** function _ADC_init *****************
   418 ;; Defined at:
   419 ;;		line 23 in file "main.c"
   420 ;; Parameters:    Size  Location     Type
   421 ;;		None
   422 ;; Auto vars:     Size  Location     Type
   423 ;;		None
   424 ;; Return value:  Size  Location     Type
   425 ;;		None               void
   426 ;; Registers used:
   427 ;;		wreg, status,2, status,0
   428 ;; Tracked objects:
   429 ;;		On entry : 0/0
   430 ;;		On exit  : 0/0
   431 ;;		Unchanged: 0/0
   432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   433 ;;      Params:         0       0       0       0
   434 ;;      Locals:         0       0       0       0
   435 ;;      Temps:          0       0       0       0
   436 ;;      Totals:         0       0       0       0
   437 ;;Total ram usage:        0 bytes
   438 ;; Hardware stack levels used:    1
   439 ;; This function calls:
   440 ;;		Nothing
   441 ;; This function is called by:
   442 ;;		_main
   443 ;; This function uses a non-reentrant model
   444 ;;
   445                           
   446                           
   447                           ;psect for function _ADC_init
   448  079C                     _ADC_init:	
   449                           
   450                           ;main.c: 24: ANSELbits.ANS4 = 1;
   451                           
   452                           ;incstack = 0
   453                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
   454  079C  1683               	bsf	3,5	;RP0=1, select bank1
   455  079D  1303               	bcf	3,6	;RP1=0, select bank1
   456  079E  1611               	bsf	17,4	;volatile
   457                           
   458                           ;main.c: 26: ADCON0bits.ADFM = 1;
   459  079F  1283               	bcf	3,5	;RP0=0, select bank0
   460  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   461  07A1  179F               	bsf	31,7	;volatile
   462                           
   463                           ;main.c: 27: ADCON0bits.VCFG = 0;
   464  07A2  131F               	bcf	31,6	;volatile
   465                           
   466                           ;main.c: 28: ADCON1bits.ADCS = 0b001;
   467  07A3  1683               	bsf	3,5	;RP0=1, select bank1
   468  07A4  1303               	bcf	3,6	;RP1=0, select bank1
   469  07A5  081F               	movf	31,w	;volatile
   470  07A6  398F               	andlw	-113
   471  07A7  3810               	iorlw	16
   472  07A8  009F               	movwf	31	;volatile
   473  07A9  0008               	return
   474  07AA                     __end_of_ADC_init:	
   475  007E                     btemp	set	126	;btemp
   476  007E                     wtemp	set	126
   477  007E                     wtemp0	set	126
   478  0080                     wtemp1	set	128
   479  0082                     wtemp2	set	130
   480  0084                     wtemp3	set	132
   481  0086                     wtemp4	set	134
   482  0088                     wtemp5	set	136
   483  007F                     wtemp6	set	127
   484  007E                     ttemp	set	126
   485  007E                     ttemp0	set	126
   486  0081                     ttemp1	set	129
   487  0084                     ttemp2	set	132
   488  0087                     ttemp3	set	135
   489  007F                     ttemp4	set	127
   490  007E                     ltemp	set	126
   491  007E                     ltemp0	set	126
   492  0082                     ltemp1	set	130
   493  0086                     ltemp2	set	134
   494  0080                     ltemp3	set	128


Data Sizes:
    Strings     4
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     131
                                              3 COMMON     2     2      0
                           _ADC_init
                           _ADC_read
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     108
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       7       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       7      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri May 20 19:49:30 2016

                      pc 0002              __CFG_CP$OFF 0000                       l24 07DF  
                     l26 07F2                       u65 07DA                       u85 07CB  
                     fsr 0004                      l642 07B7                      l644 07B4  
           __CFG_CPD$OFF 0000             __CFG_IESO$ON 0000                     STR_1 0012  
          __CFG_FCMEN$ON 0000                     _main 07AA                     btemp 007E  
          __CFG_BOREN$ON 0000                     ltemp 007E                     start 0000  
                   ttemp 007E         __end_of_ADC_init 07AA                     wtemp 007E  
       __end_of_ADC_read 07FB            __CFG_MCLRE$ON 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _SPBRG 0013                    _TRISC 0087  
                  _TXREG 0015          __end_of_dpowers 0012                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FB  
           __end_of_main 07D1                   ??_main 0073                   _ADRESH 001E  
                 _ADRESL 009E           __CFG_PWRTE$OFF 0000                ?_ADC_init 0070  
              ?_ADC_read 0070  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             ??_ADC_init 0070               ??_ADC_read 0072               __pmaintext 07AA  
             __stringtab 0002                _ANSELbits 0091                  __ptext1 07D1  
                __ptext2 079C                  _lastInt 0075                  _dpowers 0008  
   end_of_initialization 07FD                _RCSTAbits 0017                _PORTCbits 0007  
              _TRISCbits 0087        __size_of_ADC_init 000E        __size_of_ADC_read 002A  
             main@adcRes 0073                _TXSTAbits 0016             ADC_read@chan 0070  
    start_initialization 07FB              __pbssCOMMON 0075                ___latbits 0001  
              __pstrings 0002                 _ADC_init 079C                 _ADC_read 07D1  
             _ADCON0bits 001F              __stringbase 0007               _ADCON1bits 009F  
     __end_of__stringtab 0008            __size_of_main 0027                stringcode 0002  
               stringdir 0002                 stringtab 0002       __CFG_FOSC$INTOSCIO 0000  

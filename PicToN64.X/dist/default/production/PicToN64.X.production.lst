

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri May 20 20:59:24 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F688
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     	;# 
    13  0001                     	;# 
    14  0002                     	;# 
    15  0003                     	;# 
    16  0004                     	;# 
    17  0005                     	;# 
    18  0007                     	;# 
    19  000A                     	;# 
    20  000B                     	;# 
    21  000C                     	;# 
    22  000E                     	;# 
    23  000E                     	;# 
    24  000F                     	;# 
    25  0010                     	;# 
    26  0011                     	;# 
    27  0012                     	;# 
    28  0013                     	;# 
    29  0014                     	;# 
    30  0015                     	;# 
    31  0016                     	;# 
    32  0017                     	;# 
    33  0018                     	;# 
    34  0019                     	;# 
    35  001A                     	;# 
    36  001E                     	;# 
    37  001F                     	;# 
    38  0081                     	;# 
    39  0085                     	;# 
    40  0087                     	;# 
    41  008C                     	;# 
    42  008E                     	;# 
    43  008F                     	;# 
    44  0090                     	;# 
    45  0091                     	;# 
    46  0095                     	;# 
    47  0095                     	;# 
    48  0096                     	;# 
    49  0096                     	;# 
    50  0097                     	;# 
    51  0098                     	;# 
    52  0099                     	;# 
    53  009A                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009C                     	;# 
    57  009D                     	;# 
    58  009E                     	;# 
    59  009F                     	;# 
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0007                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0087                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0095                     	;# 
    95  0095                     	;# 
    96  0096                     	;# 
    97  0096                     	;# 
    98  0097                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009A                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108                           
   109                           	psect	strings
   110  0002                     __pstrings:	
   111  0002                     stringtab:	
   112  0002                     __stringtab:	
   113  0002                     stringcode:	
   114                           ;	String table - string pointers are 1 byte each
   115                           
   116  0002                     stringdir:	
   117  0002  3000               	movlw	high stringdir
   118  0003  008A               	movwf	10
   119  0004  0804               	movf	4,w
   120  0005  0A84               	incf	4,f
   121  0006  0782               	addwf	2,f
   122  0007                     __stringbase:	
   123  0007  3400               	retlw	0
   124  0008                     __end_of__stringtab:	
   125  0008                     _dpowers:	
   126  0008  3401               	retlw	1
   127  0009  3400               	retlw	0
   128  000A  340A               	retlw	10
   129  000B  3400               	retlw	0
   130  000C  3464               	retlw	100
   131  000D  3400               	retlw	0
   132  000E  34E8               	retlw	232
   133  000F  3403               	retlw	3
   134  0010  3410               	retlw	16
   135  0011  3427               	retlw	39
   136  0012                     __end_of_dpowers:	
   137  001F                     _ADCON0bits	set	31
   138  001E                     _ADRESH	set	30
   139  0007                     _PORTCbits	set	7
   140  0017                     _RCSTAbits	set	23
   141  0013                     _SPBRG	set	19
   142  0015                     _TXREG	set	21
   143  0016                     _TXSTAbits	set	22
   144  009F                     _ADCON1bits	set	159
   145  009E                     _ADRESL	set	158
   146  0091                     _ANSELbits	set	145
   147  0087                     _TRISC	set	135
   148  0087                     _TRISCbits	set	135
   149  0012                     STR_1:	
   150  0012  3425               	retlw	37	;'%'
   151  0013  3464               	retlw	100	;'d'
   152  0014  340A               	retlw	10
   153  0015  3400               	retlw	0
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  07FB                     start_initialization:	
   159  07FB                     __initialization:	
   160                           
   161                           ; Clear objects allocated to COMMON
   162  07FB  01F7               	clrf	__pbssCOMMON& (0+127)
   163  07FC  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   164  07FD                     end_of_initialization:	
   165                           ;End of C runtime variable initialization code
   166                           
   167  07FD                     __end_of__initialization:	
   168  07FD  0183               	clrf	3
   169  07FE  118A  2FB8         	ljmp	_main	;jump to C main() function
   170                           
   171                           	psect	bssCOMMON
   172  0077                     __pbssCOMMON:	
   173  0077                     _lastInt:	
   174  0077                     	ds	2
   175                           
   176                           	psect	cstackCOMMON
   177  0070                     __pcstackCOMMON:	
   178  0070                     ?_ADC_init:	
   179  0070                     ??_ADC_init:	
   180                           ; 0 bytes @ 0x0
   181                           
   182  0070                     ?_ADC_read:	
   183                           ; 0 bytes @ 0x0
   184                           
   185  0070                     ?_main:	
   186                           ; 2 bytes @ 0x0
   187                           
   188  0070                     ADC_read@chan:	
   189                           ; 2 bytes @ 0x0
   190                           
   191                           
   192                           ; 2 bytes @ 0x0
   193  0070                     	ds	2
   194  0072                     ??_ADC_read:	
   195                           
   196                           ; 0 bytes @ 0x2
   197  0072                     	ds	1
   198  0073                     ??_main:	
   199  0073                     main@adcResOne:	
   200                           ; 0 bytes @ 0x3
   201                           
   202                           
   203                           ; 2 bytes @ 0x3
   204  0073                     	ds	2
   205  0075                     main@adcResTwo:	
   206                           
   207                           ; 2 bytes @ 0x5
   208  0075                     	ds	2
   209                           
   210                           	psect	maintext
   211  07B8                     __pmaintext:	
   212 ;;
   213 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   214 ;;
   215 ;; *************** function _main *****************
   216 ;; Defined at:
   217 ;;		line 49 in file "main.c"
   218 ;; Parameters:    Size  Location     Type
   219 ;;		None
   220 ;; Auto vars:     Size  Location     Type
   221 ;;  adcResTwo       2    5[COMMON] int 
   222 ;;  adcResOne       2    3[COMMON] int 
   223 ;; Return value:  Size  Location     Type
   224 ;;                  2   30[None  ] int 
   225 ;; Registers used:
   226 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   227 ;; Tracked objects:
   228 ;;		On entry : B00/0
   229 ;;		On exit  : 0/0
   230 ;;		Unchanged: 0/0
   231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   232 ;;      Params:         0       0       0       0
   233 ;;      Locals:         4       0       0       0
   234 ;;      Temps:          0       0       0       0
   235 ;;      Totals:         4       0       0       0
   236 ;;Total ram usage:        4 bytes
   237 ;; Hardware stack levels required when called:    1
   238 ;; This function calls:
   239 ;;		_ADC_init
   240 ;;		_ADC_read
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245                           
   246                           
   247                           ;psect for function _main
   248  07B8                     _main:	
   249                           
   250                           ;main.c: 51: ADC_init();
   251                           
   252                           ;incstack = 0
   253                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   254  07B8  118A  277F  118A   	fcall	_ADC_init
   255                           
   256                           ;main.c: 52: TRISC = 0xFF;
   257  07BB  30FF               	movlw	255
   258  07BC  1683               	bsf	3,5	;RP0=1, select bank1
   259  07BD  1303               	bcf	3,6	;RP1=0, select bank1
   260  07BE  0087               	movwf	7	;volatile
   261                           
   262                           ;main.c: 53: TRISCbits.TRISC5 = 0;
   263  07BF  1287               	bcf	7,5	;volatile
   264  07C0                     L1:	
   265                           
   266                           ;main.c: 54: TRISCbits.TRISC4 = 0;
   267  07C0  1207               	bcf	7,4	;volatile
   268  07C1                     l650:	
   269                           ;main.c: 56: int adcResOne;
   270                           ;main.c: 57: int adcResTwo;
   271                           ;main.c: 59: while(1)
   272                           
   273                           
   274                           ;main.c: 60: {
   275                           ;main.c: 61: adcResOne = ADC_read(4);
   276  07C1  3004               	movlw	4
   277  07C2  00F0               	movwf	ADC_read@chan
   278  07C3  3000               	movlw	0
   279  07C4  00F1               	movwf	ADC_read@chan+1
   280  07C5  118A  278D  118A   	fcall	_ADC_read
   281  07C8  0871               	movf	?_ADC_read+1,w
   282  07C9  00F4               	movwf	main@adcResOne+1
   283  07CA  0870               	movf	?_ADC_read,w
   284  07CB  00F3               	movwf	main@adcResOne
   285                           
   286                           ;main.c: 63: if(adcResOne > 512)
   287  07CC  0874               	movf	main@adcResOne+1,w
   288  07CD  3A80               	xorlw	128
   289  07CE  00FF               	movwf	127
   290  07CF  3082               	movlw	130
   291  07D0  027F               	subwf	127,w
   292  07D1  1D03               	skipz
   293  07D2  2FD5               	goto	u95
   294  07D3  3001               	movlw	1
   295  07D4  0273               	subwf	main@adcResOne,w
   296  07D5                     u95:	
   297  07D5  1C03               	skipc
   298  07D6  2FDB               	goto	l32
   299                           
   300                           ;main.c: 64: PORTCbits.RC5 = 1;
   301  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   302  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   303  07D9  1687               	bsf	7,5	;volatile
   304  07DA  2FDE               	goto	l654
   305  07DB                     l32:	
   306                           
   307                           ;main.c: 65: else
   308                           ;main.c: 66: PORTCbits.RC5 = 0;
   309  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   310  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   311  07DD  1287               	bcf	7,5	;volatile
   312  07DE                     l654:	
   313                           
   314                           ;main.c: 68: adcResTwo = ADC_read(2);
   315  07DE  3002               	movlw	2
   316  07DF  00F0               	movwf	ADC_read@chan
   317  07E0  3000               	movlw	0
   318  07E1  00F1               	movwf	ADC_read@chan+1
   319  07E2  118A  278D  118A   	fcall	_ADC_read
   320  07E5  0871               	movf	?_ADC_read+1,w
   321  07E6  00F6               	movwf	main@adcResTwo+1
   322  07E7  0870               	movf	?_ADC_read,w
   323  07E8  00F5               	movwf	main@adcResTwo
   324                           
   325                           ;main.c: 70: if(adcResTwo > 512)
   326  07E9  0876               	movf	main@adcResTwo+1,w
   327  07EA  3A80               	xorlw	128
   328  07EB  00FF               	movwf	127
   329  07EC  3082               	movlw	130
   330  07ED  027F               	subwf	127,w
   331  07EE  1D03               	skipz
   332  07EF  2FF2               	goto	u105
   333  07F0  3001               	movlw	1
   334  07F1  0275               	subwf	main@adcResTwo,w
   335  07F2                     u105:	
   336  07F2  1C03               	skipc
   337  07F3  2FF8               	goto	l34
   338                           
   339                           ;main.c: 71: PORTCbits.RC4 = 1;
   340  07F4  1283               	bcf	3,5	;RP0=0, select bank0
   341  07F5  1303               	bcf	3,6	;RP1=0, select bank0
   342  07F6  1607               	bsf	7,4	;volatile
   343  07F7  2FC1               	goto	l650
   344  07F8                     l34:	
   345                           
   346                           ;main.c: 72: else
   347                           ;main.c: 73: PORTCbits.RC4 = 0;
   348  07F8  1283               	bcf	3,5	;RP0=0, select bank0
   349  07F9  1303               	bcf	3,6	;RP1=0, select bank0
   350  07FA  2FC0               	goto	L1
   351  07FB                     __end_of_main:	
   352                           ;main.c: 74: }
   353                           ;main.c: 76: return 0;
   354                           ;	Return value of _main is never used
   355                           
   356                           
   357                           	psect	text1
   358  078D                     __ptext1:	
   359 ;; *************** function _ADC_read *****************
   360 ;; Defined at:
   361 ;;		line 31 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  chan            2    0[COMMON] int 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  2    0[COMMON] int 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0, btemp+1
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   375 ;;      Params:         2       0       0       0
   376 ;;      Locals:         0       0       0       0
   377 ;;      Temps:          1       0       0       0
   378 ;;      Totals:         3       0       0       0
   379 ;;Total ram usage:        3 bytes
   380 ;; Hardware stack levels used:    1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_main
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _ADC_read
   390  078D                     _ADC_read:	
   391                           
   392                           ;main.c: 32: if (chan > 7) {
   393                           
   394                           ;incstack = 0
   395                           ; Regs used in _ADC_read: [wreg+status,2+status,0+btemp+1]
   396  078D  0871               	movf	ADC_read@chan+1,w
   397  078E  3A80               	xorlw	128
   398  078F  00FF               	movwf	127
   399  0790  3080               	movlw	128
   400  0791  027F               	subwf	127,w
   401  0792  1D03               	skipz
   402  0793  2F96               	goto	u75
   403  0794  3008               	movlw	8
   404  0795  0270               	subwf	ADC_read@chan,w
   405  0796                     u75:	
   406  0796  1C03               	skipc
   407  0797  2F9B               	goto	l24
   408                           
   409                           ;main.c: 33: return 0;
   410  0798  01F0               	clrf	?_ADC_read
   411  0799  01F1               	clrf	?_ADC_read+1
   412  079A  0008               	return
   413  079B                     l24:	
   414                           
   415                           ;main.c: 34: }
   416                           ;main.c: 36: ADCON0bits.ADON = 0;
   417  079B  1283               	bcf	3,5	;RP0=0, select bank0
   418  079C  1303               	bcf	3,6	;RP1=0, select bank0
   419  079D  101F               	bcf	31,0	;volatile
   420                           
   421                           ;main.c: 37: ADCON0bits.CHS = chan;
   422  079E  0870               	movf	ADC_read@chan,w
   423  079F  00F2               	movwf	??_ADC_read
   424  07A0  0DF2               	rlf	??_ADC_read,f
   425  07A1  0DF2               	rlf	??_ADC_read,f
   426  07A2  081F               	movf	31,w	;volatile
   427  07A3  0672               	xorwf	??_ADC_read,w
   428  07A4  39E3               	andlw	-29
   429  07A5  0672               	xorwf	??_ADC_read,w
   430  07A6  009F               	movwf	31	;volatile
   431                           
   432                           ;main.c: 38: ADCON0bits.ADON = 1;
   433  07A7  141F               	bsf	31,0	;volatile
   434                           
   435                           ;main.c: 40: _delay((unsigned long)((5)*(8000000/4000000.0)));
   436  07A8  3003               	movlw	3
   437  07A9  00F2               	movwf	??_ADC_read
   438  07AA                     u117:	
   439  07AA  0BF2               	decfsz	??_ADC_read,f
   440  07AB  2FAA               	goto	u117
   441                           
   442                           ;main.c: 42: ADCON0bits.GO = 1;
   443  07AC  1283               	bcf	3,5	;RP0=0, select bank0
   444  07AD  1303               	bcf	3,6	;RP1=0, select bank0
   445  07AE  149F               	bsf	31,1	;volatile
   446  07AF                     l26:	
   447                           ;main.c: 44: while (ADCON0bits.GO == 1) {};
   448                           
   449  07AF  189F               	btfsc	31,1	;volatile
   450  07B0  2FAF               	goto	l26
   451                           
   452                           ;main.c: 46: return (ADRESH<<8)+ADRESL;
   453  07B1  081E               	movf	30,w	;volatile
   454  07B2  00F1               	movwf	?_ADC_read+1
   455  07B3  1683               	bsf	3,5	;RP0=1, select bank1
   456  07B4  1303               	bcf	3,6	;RP1=0, select bank1
   457  07B5  081E               	movf	30,w	;volatile
   458  07B6  00F0               	movwf	?_ADC_read
   459  07B7  0008               	return
   460  07B8                     __end_of_ADC_read:	
   461                           
   462                           	psect	text2
   463  077F                     __ptext2:	
   464 ;; *************** function _ADC_init *****************
   465 ;; Defined at:
   466 ;;		line 23 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;		None               void
   473 ;; Registers used:
   474 ;;		wreg, status,2, status,0
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   480 ;;      Params:         0       0       0       0
   481 ;;      Locals:         0       0       0       0
   482 ;;      Temps:          0       0       0       0
   483 ;;      Totals:         0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels used:    1
   486 ;; This function calls:
   487 ;;		Nothing
   488 ;; This function is called by:
   489 ;;		_main
   490 ;; This function uses a non-reentrant model
   491 ;;
   492                           
   493                           
   494                           ;psect for function _ADC_init
   495  077F                     _ADC_init:	
   496                           
   497                           ;main.c: 24: ANSELbits.ANS4 = 1;
   498                           
   499                           ;incstack = 0
   500                           ; Regs used in _ADC_init: [wreg+status,2+status,0]
   501  077F  1683               	bsf	3,5	;RP0=1, select bank1
   502  0780  1303               	bcf	3,6	;RP1=0, select bank1
   503  0781  1611               	bsf	17,4	;volatile
   504                           
   505                           ;main.c: 26: ADCON0bits.ADFM = 1;
   506  0782  1283               	bcf	3,5	;RP0=0, select bank0
   507  0783  1303               	bcf	3,6	;RP1=0, select bank0
   508  0784  179F               	bsf	31,7	;volatile
   509                           
   510                           ;main.c: 27: ADCON0bits.VCFG = 0;
   511  0785  131F               	bcf	31,6	;volatile
   512                           
   513                           ;main.c: 28: ADCON1bits.ADCS = 0b101;
   514  0786  1683               	bsf	3,5	;RP0=1, select bank1
   515  0787  1303               	bcf	3,6	;RP1=0, select bank1
   516  0788  081F               	movf	31,w	;volatile
   517  0789  398F               	andlw	-113
   518  078A  3850               	iorlw	80
   519  078B  009F               	movwf	31	;volatile
   520  078C  0008               	return
   521  078D                     __end_of_ADC_init:	
   522  007E                     btemp	set	126	;btemp
   523  007E                     wtemp	set	126
   524  007E                     wtemp0	set	126
   525  0080                     wtemp1	set	128
   526  0082                     wtemp2	set	130
   527  0084                     wtemp3	set	132
   528  0086                     wtemp4	set	134
   529  0088                     wtemp5	set	136
   530  007F                     wtemp6	set	127
   531  007E                     ttemp	set	126
   532  007E                     ttemp0	set	126
   533  0081                     ttemp1	set	129
   534  0084                     ttemp2	set	132
   535  0087                     ttemp3	set	135
   536  007F                     ttemp4	set	127
   537  007E                     ltemp	set	126
   538  007E                     ltemp0	set	126
   539  0082                     ltemp1	set	130
   540  0086                     ltemp2	set	134
   541  0080                     ltemp3	set	128


Data Sizes:
    Strings     4
    Constant    10
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     218
                                              3 COMMON     4     4      0
                           _ADC_init
                           _ADC_read
 ---------------------------------------------------------------------------------
 (1) _ADC_read                                             3     1      2     172
                                              0 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _ADC_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_init
   _ADC_read

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITBANK1            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK1               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK2            50      0       0       6        0.0%
BANK2               50      0       0       7        0.0%
ABS                  0      0       9       8        0.0%
BITBANK0            50      0       0       9        0.0%
DATA                 0      0       9      10        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri May 20 20:59:24 2016

                      pc 0002              __CFG_CP$OFF 0000                       l24 079B  
                     l32 07DB                       l26 07AF                       l34 07F8  
                     u75 0796                       u95 07D5                       fsr 0004  
                    l650 07C1                      l654 07DE                      u105 07F2  
                    u117 07AA             __CFG_CPD$OFF 0000             __CFG_IESO$ON 0000  
                   STR_1 0012            __CFG_FCMEN$ON 0000                     _main 07B8  
                   btemp 007E            __CFG_BOREN$ON 0000                     ltemp 007E  
                   start 0000                     ttemp 007E         __end_of_ADC_init 078D  
                   wtemp 007E         __end_of_ADC_read 07B8            __CFG_MCLRE$ON 0000  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _SPBRG 0013  
                  _TRISC 0087                    _TXREG 0015          __end_of_dpowers 0012  
          main@adcResOne 0073            main@adcResTwo 0075                    pclath 000A  
                  ltemp0 007E                    ltemp1 0082                    ltemp2 0086  
                  ltemp3 0080                    ttemp0 007E                    ttemp1 0081  
                  ttemp2 0084                    ttemp3 0087                    ttemp4 007F  
                  status 0003                    wtemp0 007E                    wtemp1 0080  
                  wtemp2 0082                    wtemp3 0084                    wtemp4 0086  
                  wtemp5 0088                    wtemp6 007F          __initialization 07FB  
           __end_of_main 07FB                   ??_main 0073                   _ADRESH 001E  
                 _ADRESL 009E           __CFG_PWRTE$OFF 0000                ?_ADC_init 0070  
              ?_ADC_read 0070  __end_of__initialization 07FD           __pcstackCOMMON 0070  
             ??_ADC_init 0070               ??_ADC_read 0072               __pmaintext 07B8  
             __stringtab 0002                _ANSELbits 0091                  __ptext1 078D  
                __ptext2 077F                  _lastInt 0077                  _dpowers 0008  
   end_of_initialization 07FD                _RCSTAbits 0017                _PORTCbits 0007  
              _TRISCbits 0087        __size_of_ADC_init 000E        __size_of_ADC_read 002B  
              _TXSTAbits 0016             ADC_read@chan 0070      start_initialization 07FB  
            __pbssCOMMON 0077                ___latbits 0001                __pstrings 0002  
               _ADC_init 077F                 _ADC_read 078D               _ADCON0bits 001F  
            __stringbase 0007               _ADCON1bits 009F       __end_of__stringtab 0008  
          __size_of_main 0043                stringcode 0002                 stringdir 0002  
               stringtab 0002       __CFG_FOSC$INTOSCIO 0000  
